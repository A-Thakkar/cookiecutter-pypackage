[project]
name = "{{cookiecutter.package_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.short_description}}"
authors = [
    { name = "{{cookiecutter.author}}", email = "{{cookiecutter.author_email}}" }
]
license-files = [
    "LICENSE",
]
readme = "README.md"
requires-python = ">=3.11"
keywords = []
dependencies = [
    "ipython",
    "typer",
    "mkdocs",
    "mkdocstrings-python",
]


[dependency-groups]
dev = [
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "bump-my-version"
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# [project.scripts]

# [project.gui-scripts]

[tool.mypy]
strict = true


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "F", # pyflakes
    "E", # pycodestyle errors
    "UP", # pyupgrade
    "B", # bugbear
    "SIM", # flake8-simplify
    "I", # isort
    "N", # pep8 naming
    "W", # pycodestyle warnings
    "C90", # mccabe
    "D", # pydocstyle
    "S", # bandit
    "T20", # print
    "RUF", # ruff rules
    "C4", # comprehensions
    "Q", # quotes
    "PTH", # use pathlib
]
ignore = ["E501", "S101"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
